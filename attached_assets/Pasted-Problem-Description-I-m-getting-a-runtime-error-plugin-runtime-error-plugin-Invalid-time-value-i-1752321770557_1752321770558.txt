Problem Description
I'm getting a runtime error "[plugin:runtime-error-plugin] Invalid time value" in my Export.jsx file around line 204. This appears to be a date/time parsing issue where invalid date values are being passed to Date constructors or date formatting functions.
What I Need You To Do
1. Analyze the Error

Examine /home/runner/workspace/client/src/pages/Export.jsx around line 204
Identify all Date constructors, date formatting functions, or time-related operations
Look for variables that might contain undefined, null, or invalid date values

2. Identify Root Causes
Check for these common issues:

new Date(undefined) or new Date(null) calls
Date formatting on empty strings or invalid date formats
Missing null checks before date operations
Timezone parsing issues
Invalid date strings from API responses or user input

3. Implement Fixes
Apply these solutions where needed:
javascript// Add validation helper
const isValidDate = (date) => {
  return date && !isNaN(new Date(date).getTime());
};

// Safe date formatting
const formatDate = (dateValue) => {
  if (!dateValue) return 'N/A';
  const date = new Date(dateValue);
  return isNaN(date.getTime()) ? 'Invalid Date' : date.toLocaleDateString();
};

// Null-safe date operations
const safeDate = dateString && dateString.trim() ? new Date(dateString) : null;
4. Add Error Handling

Wrap date operations in try-catch blocks where appropriate
Add console logs to debug the actual values being passed
Provide fallback values for invalid dates

5. Test the Fix

Ensure the Export page loads without errors
Test with various date scenarios (valid dates, null values, empty strings)
Verify the export functionality works correctly

Files to Focus On

Primary: /home/runner/workspace/client/src/pages/Export.jsx (line 204 area)
Secondary: Any components or utilities that handle date formatting used by Export.jsx

Expected Outcome

No more "Invalid time value" runtime errors
Export page loads and functions correctly
Robust date handling with proper validation and fallbacks

Please analyze the code, identify the specific issue, and implement a comprehensive fix with proper error handling.